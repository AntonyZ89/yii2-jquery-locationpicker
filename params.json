{"name":"Yii2-jquery-locationpicker","tagline":"jquery location picker widget for yii2","body":"jquery location picker widget for yii2\r\n======================================\r\n\r\nThe widget implement [jquery-locationpicker-plugin\r\n](https://github.com/Logicify/jquery-locationpicker-plugin)\r\n\r\nInstallation\r\n------------\r\n\r\nThe preferred way to install this extension is through [composer](http://getcomposer.org/download/).\r\n\r\nEither run\r\n\r\n```\r\nphp composer.phar require pigochu/yii2-jquery-locationpicker \">=0.1.0\"\r\n```\r\n\r\nor add\r\n\r\n```\r\n\"pigochu/yii2-jquery-locationpicker\": \">=0.1.0\"\r\n```\r\n\r\nto the require section of your `composer.json` file.\r\n\r\n\r\nBasic Usage for Test\r\n--------------------\r\n\r\n```\r\n<?= \\pigolab\\locationpicker\\LocationPickerWidget::widget(); ?>\r\n```\r\n\r\nBinding UI with the widget\r\n--------------------------\r\n\r\nThis sample is transformed via [http://logicify.github.io/jquery-locationpicker-plugin/#usage](http://logicify.github.io/jquery-locationpicker-plugin/#usage)\r\n\r\n~~~php\r\n<?php\r\nuse yii\\web\\JsExpression;\r\n?>\r\n\r\nLocation: <input type=\"text\" id=\"us2-address\" style=\"width: 200px\"/>\r\n<br>\r\nRadius: <input type=\"text\" id=\"us2-radius\"/>\r\n<br>\r\nLat.: <input type=\"text\" id=\"us2-lat\"/>\r\n<br>\r\nLong.: <input type=\"text\" id=\"us2-lon\"/>\r\n<br>\r\n\r\n\r\n<?php\r\n    echo \\pigolab\\locationpicker\\LocationPickerWidget::widget([\r\n       'key' => 'abcabcabcabc ...',\t// optional , Your can also put your google map api key\r\n       'options' => [\r\n            'style' => 'width: 100%; height: 400px', // map canvas width and height\r\n        ] ,\r\n        'clientOptions' => [\r\n            'location' => [\r\n                'latitude'  => 46.15242437752303 ,\r\n                'longitude' => 2.7470703125,\r\n            ],\r\n            'radius'    => 300,\r\n            'inputBinding' => [\r\n                'latitudeInput'     => new JsExpression(\"$('#us2-lat')\"),\r\n                'longitudeInput'    => new JsExpression(\"$('#us2-lon')\"),\r\n                'radiusInput'       => new JsExpression(\"$('#us2-radius')\"),\r\n                'locationNameInput' => new JsExpression(\"$('#us2-address')\")\r\n            ]\r\n        ]        \r\n    ]);\r\n?>\r\n\r\n~~~\r\n\r\nCoordinatesPicker\r\n-----------------\r\n\r\nCoordinatesPicker let you get coordinates in ActiveForm , In addition I implemented some features not in original jquery-locationpicker-plugin : \r\n\r\n - enable/disable search box , search box will overlay on map\r\n - enable/disable map type control\r\n\r\n \r\n\r\nExample :\r\n\r\n~~~php\r\n<?php\r\n\techo $form->field($model, 'coordinates')->widget('\\pigolab\\locationpicker\\CoordinatesPicker' , [\r\n\t\t'key' => 'abcabcabc...' ,\t// optional , Your can also put your google map api key\r\n\t\t'valueTemplate' => '{latitude},{longitude}' , // Optional , this is default result format\r\n\t\t'options' => [\r\n\t\t\t'style' => 'width: 100%; height: 400px',  // map canvas width and height\r\n\t\t] ,\r\n\t\t'enableSearchBox => true , // Optional , default is true\r\n\t\t'searchBoxOptions' => [ // searchBox html attributes\r\n\t\t\t'style' => 'width: 300px;', // Optional , default width and height defined in css coordinates-picker.css\r\n\t\t],\r\n\t\t'enableMapTypeControl' => true , // Optional , default is true\r\n\t\t'clientOptions' => [\r\n\t\t\t'radius'    => 300,\r\n\t\t]\r\n\t]);\r\n?>\r\n~~~\r\n\r\nif you var_dump($model->coordinates) , You will get result like : 25.023308046766083,121.46041916878664 , so you can get latitude and longitude via explode(',' , $model->coordinates) .  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}